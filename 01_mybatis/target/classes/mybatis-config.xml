<?xml version="1.0" encoding="UTF-8"?>

<!-- Mybatis 설정 파일임을 선언하는 부분   https://mybatis.org/mybatis-3/ko/ 에서 복사해 옴 -->
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
  
<!-- Mybatis 설정과 관련된 설정들을 선언하는 영역 -->  
<configuration>
	<!-- DB 연결정보를 외부 properties 파일에서 불러오기 -->
	<properties resource="driver.properties"/>
	
	<settings>
		<!-- insert,update 시 파라미터 값이 null일 경우 발생하는 에러를 막기위해 아래와 같이 설정
			파라미터의 null 값에 대한 JDBC타입을 지정한다. Null 값이 발생할 경우 null로 인식 -->
		<setting name="jdbcTypeForNull" value="NULL"/>
	</settings>

	<!-- 
		VO/DTO 객체의 풀네임을 클래스 명으로 사용하기 위해 별칭을 선언하는 부분
	 -->
	<typeAliases>
		<typeAlias type="com.kh.mybatis.member.model.vo.Member" alias="Member"/>
		<typeAlias type="com.kh.mybatis.board.model.vo.Board" alias="Board"/>
		<typeAlias type="com.kh.mybatis.board.model.vo.BoardReply" alias="Reply"/>
	</typeAliases>
	
<!-- DataBase 연결할 설정 정보들을 선언하는 영역 

	default 속성 
		DataBase 연결 설정을 여러개 생성할 수 있는데 그중 기본으로 연결할 설정 정보를 지정하는 속성
-->

  <environments default="web">
  	<environment id="web">
  		<!-- 
  			트렌젝션을 제어하기 위한 설정 
  			JDBC : JDBC가 commit과 rollback을 직접 사용 가능하게 하는 옵션 (수동 Commit)
  			MANAGED : 트랜젝션에 대한 어떠한 직접적인 영향도 행사하지 않는 옵션(자동 Commit)
  		-->
  		<transactionManager type="JDBC"/>
  		
  		<!-- 
  			실제 DB 접속에 관한 정보를 넣는 태그 
  			
  			type 속성
  				POOLED : 커넥션 객체를 미리 만들어서 Pool에 저장하여 사용하는 설정 (기본 10개)
  						객체를 만드는데 시간을 줄일 수 있음
  			
  				UNPOOLED : DB 요청이 올 때마다 실시간으로 커넥션 객체를 만들고 사용이 끝나면 닫는 설정 
  							미리 객체를 만들어놓는 방식이 아니므로 느릴 수 있다.			
  		-->
  		<dataSource type="POOLED">
  			<property name="driver" value="${driver}"/>
  			<property name="url" value="${url}"/>
  			<property name="username" value="${user}"/>
  			<property name="password" value="${password}"/>
  		</dataSource>  	
  	</environment>
  	
  	<environment id="kh">
  		<transactionManager type="JDBC"/>
  		<dataSource type="POOLED">
  			<property name="driver" value="oracle.jdbc.driver.OracleDriver"/>
  			<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
  			<property name="username" value="kh"/>
  			<property name="password" value="kh"/>
  		</dataSource>  	  	
  	</environment>
  </environments>
  
  <!--  DB에 사용되는 쿼리문들을 담은 mapper파일을 등록 하는 부분 -->
  <mappers>
  	<mapper resource="mappers/member/member-mapper.xml"/>
  	<mapper resource="mappers/board/board-mapper.xml"/>
  </mappers>
  
</configuration>



